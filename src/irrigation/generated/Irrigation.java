/* CVS $Id: $ */
package irrigation.generated; 
import com.hp.hpl.jena.rdf.model.*;
import com.hp.hpl.jena.ontology.*;
 
/**
 * Vocabulary definitions from data/owl/irrigation.owl 
 * @author Auto-generated by schemagen on 15 Jul 2014 19:20 
 */
public class Irrigation {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static OntModel m_model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.w3.org/2002/07/owl#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>The ontology's owl:versionInfo as a string</p> */
    public static final String VERSION_INFO = "Final";
    
    public static final ObjectProperty isComposedOf = m_model.createObjectProperty( "http://individual.utoronto.ca/hesham/Ontology#isComposedOf" );
    
    public static final ObjectProperty Usually_is = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#Usually_is" );
    
    public static final ObjectProperty couldBeComposedOf = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#couldBeComposedOf" );
    
    public static final ObjectProperty hasAcceptableSoilType = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasAcceptableSoilType" );
    
    public static final ObjectProperty hasAppropriateSoilType = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasAppropriateSoilType" );
    
    public static final ObjectProperty hasConstraintPurpose = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasConstraintPurpose" );
    
    public static final ObjectProperty hasConstraintType = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasConstraintType" );
    
    public static final ObjectProperty hasImpactSource = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasImpactSource" );
    
    public static final ObjectProperty hasImpactedEntity = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasImpactedEntity" );
    
    public static final ObjectProperty hasInappropriateSoilType = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasInappropriateSoilType" );
    
    public static final ObjectProperty hasMeasurementResource = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasMeasurementResource" );
    
    public static final ObjectProperty hasMeasurementUnits = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasMeasurementUnits" );
    
    public static final ObjectProperty hasObject1 = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasObject1" );
    
    public static final ObjectProperty hasObject1Attribute = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasObject1Attribute" );
    
    public static final ObjectProperty hasObject2 = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasObject2" );
    
    public static final ObjectProperty hasOperatingState = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasOperatingState" );
    
    public static final ObjectProperty hasPerformanceMeasure = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasPerformanceMeasure" );
    
    public static final ObjectProperty hasSoilType = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#hasSoilType" );
    
    public static final ObjectProperty has_Pipe_Material = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#has_Pipe_Material" );
    
    public static final ObjectProperty mustbecomposedof = m_model.createObjectProperty( "http://www.owl-ontologies.com/unnamed.owl#mustbecomposedof" );
    
    public static final ObjectProperty hasAWaterSource = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasAWaterSource" );
    
    public static final ObjectProperty hasAdditive = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasAdditive" );
    
    public static final ObjectProperty hasClimate = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasClimate" );
    
    public static final ObjectProperty hasContaminantType = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasContaminantType" );
    
    public static final ObjectProperty hasCrop = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasCrop" );
    
    public static final ObjectProperty hasIrrigationSystem = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasIrrigationSystem" );
    
    public static final ObjectProperty hasLocation = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasLocation" );
    
    public static final ObjectProperty hasMaturityOf = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasMaturityOf" );
    
    public static final ObjectProperty hasOwner = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasOwner" );
    
    public static final ObjectProperty hasPatch = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasPatch" );
    
    public static final ObjectProperty hasPlantType = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasPlantType" );
    
    public static final ObjectProperty hasSensor = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasSensor" );
    
    public static final ObjectProperty hasSoil = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasSoil" );
    
    public static final ObjectProperty hasSoilType_PROP = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasSoilType" );
    
    public static final ObjectProperty hasWaterEmitters = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasWaterEmitters" );
    
    public static final ObjectProperty hasWaterFilter = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasWaterFilter" );
    
    public static final ObjectProperty hasWaterSource = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasWaterSource" );
    
    public static final ObjectProperty isAlaramedBy = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#isAlaramedBy" );
    
    /** <p>This object property will link this class with the soil class</p> */
    public static final ObjectProperty isIn = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#isIn" );
    
    public static final ObjectProperty measuresPlantType = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#measuresPlantType" );
    
    public static final ObjectProperty owns = m_model.createObjectProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#owns" );
    
    /** <p>This object property has been mapped</p> */
    public static final ObjectProperty adr = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#adr" );
    
    /** <p>This object property has been deprecated</p> */
    public static final ObjectProperty agent = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#agent" );
    
    /** <p>This object property has been mapped</p> */
    public static final ObjectProperty email = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#email" );
    
    /** <p>This object property has been mapped</p> */
    public static final ObjectProperty geo = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#geo" );
    
    /** <p>Used to support property parameters for the additional name data property</p> */
    public static final ObjectProperty hasAdditionalName = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasAdditionalName" );
    
    /** <p>To specify the components of the delivery address for the object</p> */
    public static final ObjectProperty hasAddress = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasAddress" );
    
    /** <p>To specify the busy time associated with the object. (Was called FBURL in 
     *  RFC6350)</p>
     */
    public static final ObjectProperty hasCalendarBusy = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasCalendarBusy" );
    
    /** <p>To specify the calendar associated with the object. (Was called CALURI in 
     *  RFC6350)</p>
     */
    public static final ObjectProperty hasCalendarLink = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasCalendarLink" );
    
    /** <p>To specify the calendar user address to which a scheduling request be sent 
     *  for the object. (Was called CALADRURI in RFC6350)</p>
     */
    public static final ObjectProperty hasCalendarRequest = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasCalendarRequest" );
    
    /** <p>Used to support property parameters for the category data property</p> */
    public static final ObjectProperty hasCategory = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasCategory" );
    
    /** <p>Used to support property parameters for the country name data property</p> */
    public static final ObjectProperty hasCountryName = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasCountryName" );
    
    /** <p>To specify the electronic mail address for communication with the object</p> */
    public static final ObjectProperty hasEmail = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasEmail" );
    
    /** <p>Used to support property parameters for the formatted name data property</p> */
    public static final ObjectProperty hasFN = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasFN" );
    
    /** <p>Used to support property parameters for the family name data property</p> */
    public static final ObjectProperty hasFamilyName = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasFamilyName" );
    
    /** <p>To specify the sex or gender identity of the object. URIs are recommended 
     *  to enable interoperable sex and gender codes to be used.</p>
     */
    public static final ObjectProperty hasGender = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasGender" );
    
    /** <p>To specify information related to the global positioning of the object. May 
     *  also be used as a property parameter.</p>
     */
    public static final ObjectProperty hasGeo = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasGeo" );
    
    /** <p>Used to support property parameters for the given name data property</p> */
    public static final ObjectProperty hasGivenName = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasGivenName" );
    
    /** <p>Used to support property parameters for the honorific prefix data property</p> */
    public static final ObjectProperty hasHonorificPrefix = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasHonorificPrefix" );
    
    /** <p>Used to support property parameters for the honorific suffix data property</p> */
    public static final ObjectProperty hasHonorificSuffix = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasHonorificSuffix" );
    
    /** <p>To specify the instant messaging and presence protocol communications with 
     *  the object. (Was called IMPP in RFC6350)</p>
     */
    public static final ObjectProperty hasInstantMessage = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasInstantMessage" );
    
    /** <p>To specify a public key or authentication certificate associated with the 
     *  object</p>
     */
    public static final ObjectProperty hasKey = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasKey" );
    
    /** <p>Used to support property parameters for the language data property</p> */
    public static final ObjectProperty hasLanguage = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasLanguage" );
    
    /** <p>Used to support property parameters for the locality data property</p> */
    public static final ObjectProperty hasLocality = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasLocality" );
    
    /** <p>To specify a graphic image of a logo associated with the object</p> */
    public static final ObjectProperty hasLogo = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasLogo" );
    
    /** <p>To include a member in the group this object represents. (This property can 
     *  only be used by Group individuals)</p>
     */
    public static final ObjectProperty hasMember = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasMember" );
    
    /** <p>To specify the components of the name of the object</p> */
    public static final ObjectProperty hasName = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasName" );
    
    /** <p>Used to support property parameters for the nickname data property</p> */
    public static final ObjectProperty hasNickname = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasNickname" );
    
    /** <p>Used to support property parameters for the note data property</p> */
    public static final ObjectProperty hasNote = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasNote" );
    
    /** <p>Used to support property parameters for the organization name data property</p> */
    public static final ObjectProperty hasOrganizationName = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasOrganizationName" );
    
    /** <p>Used to support property parameters for the organization unit name data property</p> */
    public static final ObjectProperty hasOrganizationUnit = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasOrganizationUnit" );
    
    /** <p>To specify an image or photograph information that annotates some aspect of 
     *  the object</p>
     */
    public static final ObjectProperty hasPhoto = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasPhoto" );
    
    /** <p>Used to support property parameters for the postal code data property</p> */
    public static final ObjectProperty hasPostalCode = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasPostalCode" );
    
    /** <p>Used to support property parameters for the region data property</p> */
    public static final ObjectProperty hasRegion = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasRegion" );
    
    /** <p>To specify a relationship between another entity and the entity represented 
     *  by this object</p>
     */
    public static final ObjectProperty hasRelated = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasRelated" );
    
    /** <p>Used to support property parameters for the role data property</p> */
    public static final ObjectProperty hasRole = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasRole" );
    
    /** <p>To specify a digital sound content information that annotates some aspect 
     *  of the object</p>
     */
    public static final ObjectProperty hasSound = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasSound" );
    
    /** <p>To identify the source of directory information of the object</p> */
    public static final ObjectProperty hasSource = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasSource" );
    
    /** <p>Used to support property parameters for the street address data property</p> */
    public static final ObjectProperty hasStreetAddress = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasStreetAddress" );
    
    /** <p>To specify the telephone number for telephony communication with the object</p> */
    public static final ObjectProperty hasTelephone = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasTelephone" );
    
    /** <p>Used to support property parameters for the title data property</p> */
    public static final ObjectProperty hasTitle = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasTitle" );
    
    /** <p>To specify a value that represents a globally unique identifier corresponding 
     *  to the object</p>
     */
    public static final ObjectProperty hasUID = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasUID" );
    
    /** <p>To specify a uniform resource locator associated with the object</p> */
    public static final ObjectProperty hasURL = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasURL" );
    
    /** <p>Used to indicate the resource value of an object property that requires property 
     *  parameters</p>
     */
    public static final ObjectProperty hasValue = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#hasValue" );
    
    /** <p>This object property has been mapped</p> */
    public static final ObjectProperty key = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#key" );
    
    /** <p>This object property has been mapped</p> */
    public static final ObjectProperty logo = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#logo" );
    
    /** <p>This object property has been mapped</p> */
    public static final ObjectProperty n = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#n" );
    
    /** <p>This object property has been mapped. Use the organization-name data property.</p> */
    public static final ObjectProperty org = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#org" );
    
    /** <p>This object property has been mapped</p> */
    public static final ObjectProperty photo = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#photo" );
    
    /** <p>This object property has been mapped</p> */
    public static final ObjectProperty sound = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#sound" );
    
    /** <p>This object property has been mapped</p> */
    public static final ObjectProperty tel = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#tel" );
    
    /** <p>This object property has been mapped</p> */
    public static final ObjectProperty url = m_model.createObjectProperty( "http://www.w3.org/2006/vcard/ns#url" );
    
    /** <p>The tolerance of the installation TCM. This attribute is most pertinent in 
     *  congested areas and during long drives. The actual accuracy of any particular 
     *  technique will depend on the surrounding soil conditions and the drive length.</p>
     */
    public static final DatatypeProperty Accuracy = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#Accuracy" );
    
    public static final DatatypeProperty Advantages = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#Advantages" );
    
    public static final DatatypeProperty ConstraintWording = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#ConstraintWording" );
    
    public static final DatatypeProperty Depth_Range = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#Depth_Range" );
    
    /** <p>The range of diameters for which the TCM can install a pipe.</p> */
    public static final DatatypeProperty Diameter_Range = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#Diameter_Range" );
    
    public static final DatatypeProperty Disadvantages = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#Disadvantages" );
    
    public static final DatatypeProperty Distance = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#Distance" );
    
    public static final DatatypeProperty DistanceOrientation = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#DistanceOrientation" );
    
    public static final DatatypeProperty DistanceType = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#DistanceType" );
    
    /** <p>The maximum length of a drive that is possible for a particular TCM</p> */
    public static final DatatypeProperty DriveLength = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#DriveLength" );
    
    /** <p>Describe the expected advance rate for a particular TCM. This rate depends 
     *  on the soil conditions, pipe diameter, required accuracy and drive length.</p>
     */
    public static final DatatypeProperty ExpectedProdcutivity = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#ExpectedProdcutivity" );
    
    public static final DatatypeProperty ImpactDescription = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#ImpactDescription" );
    
    public static final DatatypeProperty ImpactType = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#ImpactType" );
    
    public static final DatatypeProperty MaximumDiameter = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#MaximumDiameter" );
    
    public static final DatatypeProperty Maximum_Depth = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#Maximum_Depth" );
    
    public static final DatatypeProperty Minimum_Deptth = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#Minimum_Deptth" );
    
    public static final DatatypeProperty Minimum_Diameter = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#Minimum_Diameter" );
    
    public static final DatatypeProperty NeedforShafts = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#NeedforShafts" );
    
    public static final DatatypeProperty SpatialRelation = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#SpatialRelation" );
    
    public static final DatatypeProperty WorkspaceSize = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#WorkspaceSize" );
    
    public static final DatatypeProperty hasEndDate = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#hasEndDate" );
    
    public static final DatatypeProperty hasObject1AttributeValue = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#hasObject1AttributeValue" );
    
    public static final DatatypeProperty hasSpecificationSet = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#hasSpecificationSet" );
    
    public static final DatatypeProperty hasStartDate = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#hasStartDate" );
    
    public static final DatatypeProperty hasTemporalIdentifier = m_model.createDatatypeProperty( "http://www.owl-ontologies.com/unnamed.owl#hasTemporalIdentifier" );
    
    public static final DatatypeProperty City = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#City" );
    
    public static final DatatypeProperty Efficiency = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Efficiency" );
    
    public static final DatatypeProperty GallonsUsedPerHour = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#GallonsUsedPerHour" );
    
    /** <p>This attribute displays what could happen if the contaminant were to affect 
     *  the user of water</p>
     */
    public static final DatatypeProperty HealthEffect = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#HealthEffect" );
    
    public static final DatatypeProperty State = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#State" );
    
    public static final DatatypeProperty allowableDepletion = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#allowableDepletion" );
    
    public static final DatatypeProperty availableWater = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#availableWater" );
    
    public static final DatatypeProperty avgPrecipitation = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#avgPrecipitation" );
    
    public static final DatatypeProperty avgRelativeHumidity = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#avgRelativeHumidity" );
    
    public static final DatatypeProperty avgWindSpeed = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#avgWindSpeed" );
    
    public static final DatatypeProperty coordinateX = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#coordinateX" );
    
    public static final DatatypeProperty coordinateY = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#coordinateY" );
    
    /** <p>The current reading from the sensor</p> */
    public static final DatatypeProperty currentValue = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#currentValue" );
    
    public static final DatatypeProperty dailyGallonUsage = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#dailyGallonUsage" );
    
    public static final DatatypeProperty depletionLevel = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#depletionLevel" );
    
    public static final DatatypeProperty hasAType = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#hasAType" );
    
    public static final DatatypeProperty irrgationTypeName = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#irrgationTypeName" );
    
    public static final DatatypeProperty isFarmer = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#isFarmer" );
    
    public static final DatatypeProperty lowerThreshold = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#lowerThreshold" );
    
    public static final DatatypeProperty maxDryWeight = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#maxDryWeight" );
    
    /** <p>What property of the soil is this sensor measuring?</p> */
    public static final DatatypeProperty measures = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#measures" );
    
    public static final DatatypeProperty name = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#name" );
    
    public static final DatatypeProperty owner = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#owner" );
    
    public static final DatatypeProperty patch = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#patch" );
    
    public static final DatatypeProperty plantName = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#plantName" );
    
    public static final DatatypeProperty rootDepth = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#rootDepth" );
    
    public static final DatatypeProperty saturationLevel = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#saturationLevel" );
    
    public static final DatatypeProperty sensorName = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#sensorName" );
    
    public static final DatatypeProperty soil = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#soil" );
    
    /** <p>Specifies where the contaminant could originate from</p> */
    public static final DatatypeProperty source = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#source" );
    
    public static final DatatypeProperty type = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#type" );
    
    public static final DatatypeProperty upperThreshold = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#upperThreshold" );
    
    public static final DatatypeProperty waterCapacity = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#waterCapacity" );
    
    public static final DatatypeProperty wiltingPoint = m_model.createDatatypeProperty( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#wiltingPoint" );
    
    /** <p>The additional name associated with the object</p> */
    public static final DatatypeProperty additional_name = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#additional-name" );
    
    /** <p>The date of marriage, or equivalent, of the object</p> */
    public static final DatatypeProperty anniversary = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#anniversary" );
    
    /** <p>To specify the birth date of the object</p> */
    public static final DatatypeProperty bday = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#bday" );
    
    /** <p>The category information about the object, also known as tags</p> */
    public static final DatatypeProperty category = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#category" );
    
    /** <p>This data property has been deprecated</p> */
    public static final DatatypeProperty class_ = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#class" );
    
    /** <p>The country name associated with the address of the object</p> */
    public static final DatatypeProperty country_name = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#country-name" );
    
    /** <p>This data property has been deprecated</p> */
    public static final DatatypeProperty extended_address = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#extended-address" );
    
    /** <p>The family name associated with the object</p> */
    public static final DatatypeProperty family_name = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#family-name" );
    
    /** <p>The formatted text corresponding to the name of the object</p> */
    public static final DatatypeProperty fn = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#fn" );
    
    /** <p>The given name associated with the object</p> */
    public static final DatatypeProperty given_name = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#given-name" );
    
    /** <p>The honorific prefix of the name associated with the object</p> */
    public static final DatatypeProperty honorific_prefix = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#honorific-prefix" );
    
    /** <p>The honorific suffix of the name associated with the object</p> */
    public static final DatatypeProperty honorific_suffix = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#honorific-suffix" );
    
    /** <p>This data property has been deprecated</p> */
    public static final DatatypeProperty label = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#label" );
    
    /** <p>To specify the language that may be used for contacting the object. May also 
     *  be used as a property parameter.</p>
     */
    public static final DatatypeProperty language = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#language" );
    
    /** <p>This data property has been deprecated. See hasGeo</p> */
    public static final DatatypeProperty latitude = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#latitude" );
    
    /** <p>The locality (e.g. city or town) associated with the address of the object</p> */
    public static final DatatypeProperty locality = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#locality" );
    
    /** <p>This data property has been deprecated. See hasGeo</p> */
    public static final DatatypeProperty longitude = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#longitude" );
    
    /** <p>This data property has been deprecated</p> */
    public static final DatatypeProperty mailer = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#mailer" );
    
    /** <p>The nick name associated with the object</p> */
    public static final DatatypeProperty nickname = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#nickname" );
    
    /** <p>A note associated with the object</p> */
    public static final DatatypeProperty note = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#note" );
    
    /** <p>To specify the organizational name associated with the object</p> */
    public static final DatatypeProperty organization_name = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#organization-name" );
    
    /** <p>To specify the organizational unit name associated with the object</p> */
    public static final DatatypeProperty organization_unit = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#organization-unit" );
    
    /** <p>This data property has been deprecated</p> */
    public static final DatatypeProperty post_office_box = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#post-office-box" );
    
    /** <p>The postal code associated with the address of the object</p> */
    public static final DatatypeProperty postal_code = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#postal-code" );
    
    /** <p>To specify the identifier for the product that created the object</p> */
    public static final DatatypeProperty prodid = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#prodid" );
    
    /** <p>The region (e.g. state or province) associated with the address of the object</p> */
    public static final DatatypeProperty region = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#region" );
    
    /** <p>To specify revision information about the object</p> */
    public static final DatatypeProperty rev = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#rev" );
    
    /** <p>To specify the function or part played in a particular situation by the object</p> */
    public static final DatatypeProperty role = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#role" );
    
    /** <p>To specify the string to be used for national-language-specific sorting. Used 
     *  as a property parameter only.</p>
     */
    public static final DatatypeProperty sort_string = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#sort-string" );
    
    /** <p>The street address associated with the address of the object</p> */
    public static final DatatypeProperty street_address = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#street-address" );
    
    /** <p>To specify the position or job of the object</p> */
    public static final DatatypeProperty title = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#title" );
    
    /** <p>To indicate time zone information that is specific to the object. May also 
     *  be used as a property parameter.</p>
     */
    public static final DatatypeProperty tz = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#tz" );
    
    /** <p>Used to indicate the literal value of a data property that requires property 
     *  parameters</p>
     */
    public static final DatatypeProperty value = m_model.createDatatypeProperty( "http://www.w3.org/2006/vcard/ns#value" );
    
    public static final AnnotationProperty hasMeasure = m_model.createAnnotationProperty( "http://individual.utoronto.ca/hesham/Ontology#hasMeasure" );
    
    public static final OntClass AccessProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#AccessProduct" );
    
    public static final OntClass Attribute = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Attribute" );
    
    public static final OntClass Cable = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Cable" );
    
    public static final OntClass CasingType = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#CasingType" );
    
    public static final OntClass Chamber = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Chamber" );
    
    public static final OntClass ComponentLevelProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#ComponentLevelProduct" );
    
    public static final OntClass Constraint = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Constraint" );
    
    public static final OntClass ControlProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#ControlProduct" );
    
    public static final OntClass DestructiveTests = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#DestructiveTests" );
    
    public static final OntClass Driveway = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Driveway" );
    
    public static final OntClass ElectricityProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#ElectricityProduct" );
    
    public static final OntClass Entrances = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Entrances" );
    
    public static final OntClass Fitting = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Fitting" );
    
    public static final OntClass GasProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#GasProduct" );
    
    public static final OntClass InfrastructureProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#InfrastructureProduct" );
    
    public static final OntClass InfrastructureProductAttribute = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#InfrastructureProductAttribute" );
    
    public static final OntClass InstallationMethod = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#InstallationMethod" );
    
    public static final OntClass JunctionBox = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#JunctionBox" );
    
    public static final OntClass Line = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Line" );
    
    public static final OntClass Manhole = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Manhole" );
    
    public static final OntClass MaterialAttributes = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#MaterialAttributes" );
    
    public static final OntClass Measure = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Measure" );
    
    public static final OntClass MeasuringProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#MeasuringProduct" );
    
    public static final OntClass Meter = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Meter" );
    
    public static final OntClass Metrics = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Metrics" );
    
    public static final OntClass NonDestructiveTests = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#NonDestructiveTests" );
    
    public static final OntClass None = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#None" );
    
    public static final OntClass NonsteerableMethod = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#NonsteerableMethod" );
    
    public static final OntClass Parameter = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Parameter" );
    
    public static final OntClass Pedestal = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Pedestal" );
    
    public static final OntClass Pipe = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Pipe" );
    
    public static final OntClass PipePressureTest = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#PipePressureTest" );
    
    public static final OntClass Process = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Process" );
    
    public static final OntClass ProductType = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#ProductType" );
    
    public static final OntClass ProductUse = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#ProductUse" );
    
    public static final OntClass ProtectionProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#ProtectionProduct" );
    
    public static final OntClass Pump = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Pump" );
    
    public static final OntClass PumpingProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#PumpingProduct" );
    
    public static final OntClass RatedPressure = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#RatedPressure" );
    
    public static final OntClass Resource = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Resource" );
    
    public static final OntClass Sidewalk = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Sidewalk" );
    
    public static final OntClass SoilType = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#SoilType" );
    
    public static final OntClass SteerableMethod = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#SteerableMethod" );
    
    public static final OntClass StormWaterProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#StormWaterProduct" );
    
    public static final OntClass StreetProducts = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#StreetProducts" );
    
    public static final OntClass SubSystemLevelProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#SubSystemLevelProduct" );
    
    public static final OntClass Switch = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Switch" );
    
    public static final OntClass System = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#System" );
    
    public static final OntClass SystemLevelProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#SystemLevelProduct" );
    
    public static final OntClass TelecommunicationProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#TelecommunicationProduct" );
    
    public static final OntClass TracingProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#TracingProduct" );
    
    public static final OntClass TransportationProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#TransportationProduct" );
    
    public static final OntClass Trees = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Trees" );
    
    public static final OntClass TrenclessMethod = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#TrenclessMethod" );
    
    public static final OntClass Valve = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Valve" );
    
    public static final OntClass WasteWaterProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#WasteWaterProduct" );
    
    public static final OntClass WaterProduct = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#WaterProduct" );
    
    public static final OntClass Wire = m_model.createClass( "http://individual.utoronto.ca/hesham/Ontology#Wire" );
    
    /** <p>Average Annual Daily Traffic count</p> */
    public static final OntClass AADT = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AADT" );
    
    public static final OntClass Abandoned = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Abandoned" );
    
    public static final OntClass AccessPointLocation = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AccessPointLocation" );
    
    public static final OntClass AccessibilityAttributes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AccessibilityAttributes" );
    
    /** <p>A device that enables any or all of the following: Different sizes or types 
     *  of plugs to mate with one another or to fit into a telecommunications outlet; 
     *  The rearrangement of leads; Large cables with numerous wires to fan out into 
     *  smaller groups of wires, and; Interconnection between cables.</p>
     */
    public static final OntClass Adapter = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Adapter" );
    
    /** <p>Telecommunications cable installed on aerial supporting structures such as 
     *  poles, sides of buildings, and other structures.</p>
     */
    public static final OntClass AerialCable = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AerialCable" );
    
    public static final OntClass Air = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Air" );
    
    /** <p>An underground pipe that parallels cable runs and is used to supply air for 
     *  pressurized cables.</p>
     */
    public static final OntClass AirFeederPipe = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AirFeederPipe" );
    
    public static final OntClass AirReleaseValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AirReleaseValve" );
    
    /** <p>This device is used to inject alcohol into the flow of gas inside a pipeline</p> */
    public static final OntClass AlcoholInjectionEquipment = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AlcoholInjectionEquipment" );
    
    public static final OntClass Aluminum = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Aluminum" );
    
    /** <p>An anchor composed of a rigid steel or other high-strength metal plate direct-buried 
     *  in the ground.</p>
     */
    public static final OntClass AnchorPlate = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AnchorPlate" );
    
    /** <p>The portion of an anchor assembly that extends above the anchor plate below 
     *  ground level to a point above ground level.</p>
     */
    public static final OntClass AnchorRods = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AnchorRods" );
    
    public static final OntClass AsbestosCement = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AsbestosCement" );
    
    public static final OntClass AutomatedMeterReading = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AutomatedMeterReading" );
    
    public static final OntClass AverageNumberofAceesPointPer500m = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#AverageNumberofAceesPointPer500m" );
    
    public static final OntClass BackFlow = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#BackFlow" );
    
    /** <p>A facility (e.g., pathway, cable, or conductors) between telecommunications 
     *  rooms or floor distribution terminals, the entrance facilities, and the equipment 
     *  rooms within or between buildings.</p>
     */
    public static final OntClass Backbone = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Backbone" );
    
    public static final OntClass BlackIron = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#BlackIron" );
    
    public static final OntClass BlowOff = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#BlowOff" );
    
    public static final OntClass Bolts = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Bolts" );
    
    public static final OntClass Brick = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Brick" );
    
    /** <p>An assembly of two or more cables continuously bound together to form a single 
     *  unit. Not to be confused with hybrid cable.</p>
     */
    public static final OntClass BundledCable = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#BundledCable" );
    
    public static final OntClass BuriedPlantSealer = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#BuriedPlantSealer" );
    
    public static final OntClass BusinessImpact = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#BusinessImpact" );
    
    public static final OntClass BusinessImpactAttributes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#BusinessImpactAttributes" );
    
    /** <p>1. Housings used for storing splice closures and terminals in OSP. 2. An enclosed 
     *  container used for mounting a wide variety of miscellaneous equipment inside 
     *  them (e.g., fans, power strips, connection devices, terminations, apparatus, 
     *  cables, wires, equipment, etc.). They are available in a wide variety of sizes 
     *  for either wall-mounting or self-supporting.</p>
     */
    public static final OntClass Cabinet = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Cabinet" );
    
    /** <p>An assembly of one or more insulated conductors or optical fibers within an 
     *  enveloping sheath, constructed to permit use of the conductors or optical 
     *  fibers singly or in groups.</p>
     */
    public static final OntClass Cable_CLASS = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Cable" );
    
    /** <p>Aerial cable that is transitioned down a utility pole and placed below grade 
     *  distribution, typically occurring at the pole closest to the building. It 
     *  is also called a pole dip.</p>
     */
    public static final OntClass CableDip = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CableDip" );
    
    public static final OntClass CableLashingWires = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CableLashingWires" );
    
    /** <p>The vertical or horizontal open support structure (usually made of aluminum 
     *  or steel) that is attached to a ceiling or wall.</p>
     */
    public static final OntClass CableRack = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CableRack" );
    
    public static final OntClass CableSlackOrganizer = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CableSlackOrganizer" );
    
    public static final OntClass CableSuspensionClamp = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CableSuspensionClamp" );
    
    public static final OntClass CastIron = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CastIron" );
    
    /** <p>A chamber or well, usually built at the curbline of a street, that admits 
     *  surface water for discharge into a stormwater drain.</p>
     */
    public static final OntClass CatchBasin = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CatchBasin" );
    
    public static final OntClass Check = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Check" );
    
    public static final OntClass CheckValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CheckValve" );
    
    public static final OntClass Chemicals = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Chemicals" );
    
    public static final OntClass Chilledwater = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Chilledwater" );
    
    public static final OntClass Clamp = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Clamp" );
    
    /** <p>Material passing a 0.075-mm (No. 200) that exhibits plasticity, and strength 
     *  when dry (PI ³ 4).</p>
     */
    public static final OntClass Clay = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Clay" );
    
    public static final OntClass ClearnaceConstraint = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ClearnaceConstraint" );
    
    /** <p>More than 50 percent retained on a 0.075 mm (No. 200) sieve</p> */
    public static final OntClass CoarseGrainedSoil = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CoarseGrainedSoil" );
    
    /** <p>Material passing a 75-mm (3-inch) sieve and retained on a 19.0-mm (3/4-inch) 
     *  sieve.</p>
     */
    public static final OntClass CoarseGravel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CoarseGravel" );
    
    /** <p>Material passing a 4.75-mm sieve (No. 4) and retained on a 2.00-mm (No. 10) 
     *  sieve.</p>
     */
    public static final OntClass CoarseSand = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CoarseSand" );
    
    /** <p>An unbalanced cable consisting of a central metallic core surrounded by a 
     *  layer of insulating material. This insulating (dielectric) material may be 
     *  a solid material or air spaced. The entire assembly is covered with a metallic 
     *  mesh or solid metallic sleeve and may be protected by an outer layer of non-conducting 
     *  material (cable jacket).</p>
     */
    public static final OntClass CoaxialCable = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CoaxialCable" );
    
    public static final OntClass CommunityImpact = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CommunityImpact" );
    
    public static final OntClass Compound = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Compound" );
    
    public static final OntClass CompressionTest = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CompressionTest" );
    
    public static final OntClass Concrete = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Concrete" );
    
    /** <p>A rigid or flexible metallic or non-metallic raceway of circular cross-section 
     *  through which cables can be pulled.</p>
     */
    public static final OntClass Conduit = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Conduit" );
    
    /** <p>Any combination of ducts, conduits, maintenance holes, handholes, and vaults 
     *  joined to form an integrated whole.</p>
     */
    public static final OntClass ConduitSystem = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ConduitSystem" );
    
    public static final OntClass ConstraintPurpose = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ConstraintPurpose" );
    
    public static final OntClass ConstraintType = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ConstraintType" );
    
    public static final OntClass Constructability = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Constructability" );
    
    public static final OntClass ConstructabilityAttributes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ConstructabilityAttributes" );
    
    public static final OntClass ConstructtionMethod = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ConstructtionMethod" );
    
    public static final OntClass Control = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Control" );
    
    public static final OntClass Copper = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Copper" );
    
    public static final OntClass Corrosion = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Corrosion" );
    
    public static final OntClass CorrosionSusceptibilityAttributes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CorrosionSusceptibilityAttributes" );
    
    public static final OntClass CorrugatedAluminum = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CorrugatedAluminum" );
    
    public static final OntClass CorrugatedMetal = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CorrugatedMetal" );
    
    public static final OntClass CorrugatedSteel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CorrugatedSteel" );
    
    public static final OntClass CurbInlet = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#CurbInlet" );
    
    /** <p>An optical fiber, usually singlemode, that has double cladding with the outer 
     *  cladding having a refractive index between that of the inner cladding and 
     *  the core.</p>
     */
    public static final OntClass DepressedCladFOC = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DepressedCladFOC" );
    
    /** <p>amount of extra costs that are incurred during design</p> */
    public static final OntClass DesignCostOverrun = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DesignCostOverrun" );
    
    public static final OntClass DesignDocumentReleaseCommitment = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DesignDocumentReleaseCommitment" );
    
    /** <p>Ratio of design work hours per design drawing released</p> */
    public static final OntClass DesignHoursPerDrawing = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DesignHoursPerDrawing" );
    
    public static final OntClass DesignProcessMetrics = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DesignProcessMetrics" );
    
    /** <p>Amount of design that has to be redone usually measured in percentage</p> */
    public static final OntClass DesignRework = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DesignRework" );
    
    /** <p>amount of delay in the design schedule expressed in time units or percentage 
     *  of design time</p>
     */
    public static final OntClass DesignScheduleDelay = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DesignScheduleDelay" );
    
    public static final OntClass Detector = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Detector" );
    
    public static final OntClass DewateringNeed = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DewateringNeed" );
    
    public static final OntClass DewateringNeeded = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DewateringNeeded" );
    
    public static final OntClass DewateringNotNeeded = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DewateringNotNeeded" );
    
    /** <p>A non-conducting cable such as an optical fiber cable with no metallic members.</p> */
    public static final OntClass DielectricCable = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DielectricCable" );
    
    /** <p>These types of optical fibers have a different internal configuration. The 
     *  zero dispersion point in singlemode optical fiber is at 1300 nm. Dispersion 
     *  shifted optical fiber changes the zero total chromatic dispersion point to 
     *  1550 nm because the attenuation at this wavelength is only about half as much 
     *  as at 1300 nm.</p>
     */
    public static final OntClass DispersionShiftedFOC = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DispersionShiftedFOC" );
    
    /** <p>A singlemode optical fiber that has a nominal zero-dispersion wavelength in 
     *  the 1300 nm transmission window. Often called conventional or unshifted fiber.</p>
     */
    public static final OntClass DispersionUnshiftedFOC = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DispersionUnshiftedFOC" );
    
    /** <p>A structure with terminations for connecting the cabling of a facility in 
     *  such a manner that interconnection or cross-connections may be readily made. 
     *  See main cross-connect (campus distributor).</p>
     */
    public static final OntClass DistributionFrame = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DistributionFrame" );
    
    /** <p>A steel messenger (strand) that connects the suspension strand, span guy, 
     *  or other items of aerial plant to an anchor and rod.</p>
     */
    public static final OntClass DownGuy = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DownGuy" );
    
    /** <p>Pull cord or line installed in a cable pathway (preferably a pull-strength 
     *  measured tape). The line may be used for pulling in a stronger strength rope 
     *  to pull cable(s) of greater mass and weight into the finished conduits.</p>
     */
    public static final OntClass DragLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DragLine" );
    
    public static final OntClass Drain = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Drain" );
    
    public static final OntClass DrainValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DrainValve" );
    
    /** <p>A Drip collects and pumps water that has accumulated in the gas distribution 
     *  system. Drips are generally installed in low-lying areas. Drip are not connected 
     *  to service lines</p>
     */
    public static final OntClass Drip = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Drip" );
    
    /** <p>An aerial cable that connects a serving outdoor terminal to a building or 
     *  structure.</p>
     */
    public static final OntClass DropWire = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DropWire" );
    
    /** <p>1. A single enclosed pathway for conductors or cables, usually placed in soil 
     *  or concrete.</p>
     */
    public static final OntClass Duct = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Duct" );
    
    /** <p>An arrangement of ducts, for wires or cables, in tiers.</p> */
    public static final OntClass DuctBank = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DuctBank" );
    
    /** <p>A fitting capping the end of a duct, or fittings to surround cables within 
     *  the duct, designed to provide a gas and liquid-tight seal.</p>
     */
    public static final OntClass DuctPlug = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DuctPlug" );
    
    public static final OntClass DuctSealer = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DuctSealer" );
    
    public static final OntClass DuctileIron = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#DuctileIron" );
    
    public static final OntClass EaseofSiteAccess = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#EaseofSiteAccess" );
    
    public static final OntClass ElasticityTest = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElasticityTest" );
    
    /** <p>A group of conductors used to carry electrical energy from point to point.</p> */
    public static final OntClass ElectricityCable = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityCable" );
    
    /** <p>An electrical device placed in a circuit to correct power factor by adding 
     *  reactive power to the circuit.</p>
     */
    public static final OntClass ElectricityCapacitor = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityCapacitor" );
    
    /** <p>A tubular structure that provides protection for underground cables contained 
     *  in conduit.</p>
     */
    public static final OntClass ElectricityDuctBank = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityDuctBank" );
    
    /** <p>The location where the electrical configuration is grounded.</p> */
    public static final OntClass ElectricityGroundPoint = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityGroundPoint" );
    
    /** <p>A box or small vault (usually concrete, brick, or metal) typically located 
     *  below grade with above grade access in which cables intersect, connect, or 
     *  pass through.</p>
     */
    public static final OntClass ElectricityJunctionBox = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityJunctionBox" );
    
    public static final OntClass ElectricityLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityLine" );
    
    /** <p>A sign, concrete monument, etc. installed either directly above or immediately 
     *  adjacent to underground lines, bends, fittings, etc., identifying the location 
     *  of the electrical equipment.</p>
     */
    public static final OntClass ElectricityMarker = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityMarker" );
    
    /** <p>A device installed in a line for measuring the electrical power supplied to 
     *  a facility or through a section of line.</p>
     */
    public static final OntClass ElectricityMeter = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityMeter" );
    
    /** <p>An above ground enclosure which provides access to underground cables.</p> */
    public static final OntClass ElectricityPedestal = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityPedestal" );
    
    /** <p>An electrical device that maintains its output voltage at a certain level 
     *  even though its input voltage varies in a certain range over time.</p>
     */
    public static final OntClass ElectricityRegulator = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityRegulator" );
    
    /** <p>The location where underground cable transitions to overhead.</p> */
    public static final OntClass ElectricityRiserPoint = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityRiserPoint" );
    
    /** <p>The connection of two separate cables at their ends or the tapping of a conductor 
     *  along the path of another conductor.</p>
     */
    public static final OntClass ElectricitySplice = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricitySplice" );
    
    /** <p>A device which closes and opens (connects and disconnects) an electrical circuit.</p> */
    public static final OntClass ElectricitySwitch = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricitySwitch" );
    
    public static final OntClass ElectricityWire = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ElectricityWire" );
    
    public static final OntClass EnviornmentalImpact = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#EnviornmentalImpact" );
    
    public static final OntClass ExcavationDepth = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ExcavationDepth" );
    
    /** <p>Corrosion or deterioration of the outside of a pipe or appurtenance, i.e., 
     *  the side of the pipe that does not carry or is not exposed to the potable 
     *  water. External corrosion may be caused by soil or bedding conditions, surface 
     *  characteristics, moisture conditions, grounding procedures, other utility 
     *  structures, and so on. Cathodic protection systems are often used to mitigate 
     *  external corrosion</p>
     */
    public static final OntClass ExternalCorrosion = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ExternalCorrosion" );
    
    public static final OntClass FeederLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FeederLine" );
    
    /** <p>The alignment sleeve portion of an optical connector used to protect and align 
     *  the stripped fiber.</p>
     */
    public static final OntClass Ferrule = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Ferrule" );
    
    public static final OntClass FiberglassPole = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FiberglassPole" );
    
    /** <p>Cable made up of one or more strands of optical fibers, strength members, 
     *  and an outer jacket.</p>
     */
    public static final OntClass FibreOpticCable = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FibreOpticCable" );
    
    /** <p>also Fibre-reinforced polymer) is a composite material comprising a polymer 
     *  matrix reinforced with fibres. The fibers are usually fiberglass, carbon, 
     *  or aramid, while the polymer is usually an epoxy, vinylester or polyester 
     *  thermosetting plastic.</p>
     */
    public static final OntClass FibreReinforcedPlastic = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FibreReinforcedPlastic" );
    
    /** <p>50 percent or more passes a 0.075 mm (No. 200) sieve</p> */
    public static final OntClass FineGrainedSoil = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FineGrainedSoil" );
    
    /** <p>Material passing a 19.0-mm (3/4-inch) sieve and retained on a 4.75-mm (No. 
     *  4) sieve</p>
     */
    public static final OntClass FineGravel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FineGravel" );
    
    /** <p>Material passing a 0.475-mm (No. 40) sieve and retained on a 0.075-mm (No. 
     *  200) sieve</p>
     */
    public static final OntClass FineSand = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FineSand" );
    
    public static final OntClass Fire = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Fire" );
    
    public static final OntClass FireHydrant = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FireHydrant" );
    
    /** <p>A stationary pump installed solely to provide water for fire protection. Such 
     *  a pump may be used to supply sprinkler, standpipe, yard main, and other types 
     *  of fire protection systems</p>
     */
    public static final OntClass FirePump = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FirePump" );
    
    /** <p>A separate system of water pipes or mains and their appurtenances installed 
     *  solely to furnish water for extinguishing fires.</p>
     */
    public static final OntClass FireSystem = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FireSystem" );
    
    public static final OntClass FirmSoil = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FirmSoil" );
    
    /** <p>A valve that is hinged at one edge and that opens and shuts by rotating about 
     *  the hinge. See also check valve</p>
     */
    public static final OntClass FlapValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FlapValve" );
    
    /** <p>A valve in which the closure to an opening, such as a plug or gate, is actuated 
     *  by a float to control the flow into a tank</p>
     */
    public static final OntClass FloatValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#FloatValve" );
    
    public static final OntClass Freon = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Freon" );
    
    public static final OntClass Fuel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Fuel" );
    
    /** <p>An overcurrent protective device with a circuit-opening fusible element that 
     *  is severed (open) when heated by the passage of an overcurrent. Fuses are 
     *  normally one-time devices; once they are open, they are not reusable.</p>
     */
    public static final OntClass Fuse = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Fuse" );
    
    public static final OntClass GalvanizedIron = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GalvanizedIron" );
    
    public static final OntClass GalvanizedSteel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GalvanizedSteel" );
    
    /** <p>A material used for natural gas distribution systems that is electrically 
     *  connected to a less electrolytically active material so that it will oxidize 
     *  in the place of the less active material.</p>
     */
    public static final OntClass GasAnode = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasAnode" );
    
    /** <p>A mechanical device that connects two or more pipes. Fittings may connect 
     *  similar types or sizes of pipe or dissimilar pipes.</p>
     */
    public static final OntClass GasConnectionFitting = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasConnectionFitting" );
    
    /** <p>Gas devices control the flow of gas through a network of pipes, measuring 
     *  and controlling the pressure at which gas is delivered.</p>
     */
    public static final OntClass GasDevice = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasDevice" );
    
    public static final OntClass GasDistributionMain = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasDistributionMain" );
    
    /** <p>Location where gas is control discharged to users.</p> */
    public static final OntClass GasFill = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasFill" );
    
    /** <p>Hardware used to cap, plug, or join pieces of pipe. A mechanical device that 
     *  connects two or more pipes. Fittings may connect similar types or sizes of 
     *  pipe or dissimilar pipes.</p>
     */
    public static final OntClass GasFitting = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasFitting" );
    
    /** <p>A box or small vault (usually concrete, brick, or cast iron) in natural gas 
     *  systems located below grade with above grade access where pipes intersect. 
     *  The manhole also houses associated fittings, valves, meters, etc.</p>
     */
    public static final OntClass GasJunctionBox = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasJunctionBox" );
    
    /** <p>A pipe used to carry natural gas from location to location (main line, service 
     *  line, vent line, etc).</p>
     */
    public static final OntClass GasLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasLine" );
    
    /** <p>A sign, concrete monument, etc. installed either directly above or immediately 
     *  adjacent to underground lines, bends, fittings, etc to indicate natural gas.</p>
     */
    public static final OntClass GasMarker = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasMarker" );
    
    /** <p>A device installed in a line for measuring the quantity and or rate of gas 
     *  to a facility or through a section of line.</p>
     */
    public static final OntClass GasMeter = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasMeter" );
    
    public static final OntClass GasPipe = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasPipe" );
    
    public static final OntClass GasPipeMaterial = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasPipeMaterial" );
    
    /** <p>A pressure regulator automatically reduces the pressure on the downstream 
     *  side of the valve to a preset magnitude.</p>
     */
    public static final OntClass GasRegulatorReducer = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasRegulatorReducer" );
    
    /** <p>This safety valve in a regulator station is designed to release when the set 
     *  pressure is exceeded. Relief Valves ensure the system pressure does not exceed 
     *  the maximum allowable operating pressure of a Distribution System</p>
     */
    public static final OntClass GasReleifValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasReleifValve" );
    
    public static final OntClass GasServiceLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasServiceLine" );
    
    /** <p>Station Structures protect and provide access to above ground gas devices 
     *  and facilities</p>
     */
    public static final OntClass GasStationStructure = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasStationStructure" );
    
    public static final OntClass GasSubTransmissionMain = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasSubTransmissionMain" );
    
    public static final OntClass GasTransmissionMain = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasTransmissionMain" );
    
    /** <p>An overvoltage protector featuring metallic electrodes that discharge in a 
     *  gas atmosphere within a glass or ceramic envelope. This type of protector 
     *  does not require replacement each time it discharges, so it requires fewer 
     *  site maintenance visits.</p>
     */
    public static final OntClass GasTubeProtector = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasTubeProtector" );
    
    /** <p>A fitting or device used for shutting or throttling flow through a natural 
     *  gas line.</p>
     */
    public static final OntClass GasValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasValve" );
    
    /** <p>Vaults protect and provide access to underground gas pipes and valves.</p> */
    public static final OntClass GasVault = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GasVault" );
    
    public static final OntClass Gasoline = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Gasoline" );
    
    public static final OntClass GateValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GateValve" );
    
    /** <p>The Gathering Field Pipe collects gas from the gathering field for distribution.</p> */
    public static final OntClass GatheringFeildLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GatheringFeildLine" );
    
    public static final OntClass GeneralHardware = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GeneralHardware" );
    
    public static final OntClass Generator = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Generator" );
    
    /** <p>is a composite material or fibre-reinforced plastic made of a plastic reinforced 
     *  by fine fibers made of glass. Like graphite-reinforced plastic, the composite 
     *  material is commonly referred to by the name of its reinforcing fibers</p>
     */
    public static final OntClass GlassReinforcedPlastic = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GlassReinforcedPlastic" );
    
    public static final OntClass GlobeValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GlobeValve" );
    
    /** <p>Material passing a 75-mm (3-inch) sieve and retained on a 4.75-mm (No. 4) 
     *  sieve.</p>
     */
    public static final OntClass Gravel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Gravel" );
    
    /** <p>A chamber designed to remove sand, gravel, or other heavy solids that have 
     *  subsiding velocities or specific gravities substantially greater than those 
     *  of the organic solids in the waste water system.</p>
     */
    public static final OntClass GritChamber = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GritChamber" );
    
    /** <p>A conducting connection, whether intentional or accidental, between an electrical 
     *  circuit (e.g., telecommunications) or equipment and the earth, or to some 
     *  conducting body that serves in place of earth.</p>
     */
    public static final OntClass GroundingConnector = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GroundingConnector" );
    
    public static final OntClass GroundingRods = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GroundingRods" );
    
    public static final OntClass Guards = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Guards" );
    
    /** <p>A steel stranded wire used to provide counter tension to the pole opposite 
     *  that of the installed cable pull tension to keep the pole upright.</p>
     */
    public static final OntClass Guy = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Guy" );
    
    public static final OntClass GuyHooks = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GuyHooks" );
    
    public static final OntClass GuyLiftPlates = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GuyLiftPlates" );
    
    public static final OntClass GuyStrand = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#GuyStrand" );
    
    /** <p>A structure similar to a small maintenance hole in which cable can be spliced 
     *  or pulled, but not large enough for a person to fully enter to perform work.</p>
     */
    public static final OntClass Handholes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Handholes" );
    
    /** <p>a polyethylene thermoplastic made from petroleum.</p> */
    public static final OntClass HighDensityPolyethylene = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#HighDensityPolyethylene" );
    
    /** <p>A 2-stage process that involves the drilling of a small diameter pilot hole 
     *  along the desired centerline of the proposed line followed by the enlarging 
     *  of the pilot hole to the desired diameter and pulling the utility line through 
     *  the enlarged hole.</p>
     */
    public static final OntClass HorizontalDirectionalDrilling = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#HorizontalDirectionalDrilling" );
    
    /** <p>A process that simultaneously jacks a steel casing from a drive pit through 
     *  the earth while removing the spoil inside the encasement by means of a rotating 
     *  flight auger.</p>
     */
    public static final OntClass Horizontal_Auger_Boring = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Horizontal_Auger_Boring" );
    
    public static final OntClass HotWater = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#HotWater" );
    
    /** <p>An assembly of two or more cables, of the same or different types or categories, 
     *  covered by one overall sheath. Contrast with bundled cable.</p>
     */
    public static final OntClass HybridCable = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#HybridCable" );
    
    public static final OntClass Hydrant = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Hydrant" );
    
    public static final OntClass Inconel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Inconel" );
    
    public static final OntClass InfrastructureSafety_Security = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#InfrastructureSafety_Security" );
    
    public static final OntClass InfrastructureSegment = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#InfrastructureSegment" );
    
    public static final OntClass InsertPedestal = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#InsertPedestal" );
    
    public static final OntClass InstalledPipeAttribute = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#InstalledPipeAttribute" );
    
    public static final OntClass InternalCorrosion = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#InternalCorrosion" );
    
    public static final OntClass Iron = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Iron" );
    
    public static final OntClass IsolationValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#IsolationValve" );
    
    public static final OntClass LagScrews = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#LagScrews" );
    
    public static final OntClass LayerThreeSwitch = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#LayerThreeSwitch" );
    
    public static final OntClass LeakageTest = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#LeakageTest" );
    
    public static final OntClass LengthUnits = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#LengthUnits" );
    
    /** <p>This device is used to heat natural gas inside a pipeline</p> */
    public static final OntClass LineHeater = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#LineHeater" );
    
    public static final OntClass LineTap = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#LineTap" );
    
    public static final OntClass LineType = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#LineType" );
    
    public static final OntClass LocationalPrefernceConstraint = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#LocationalPrefernceConstraint" );
    
    public static final OntClass Locknuts = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Locknuts" );
    
    public static final OntClass LooseSoil = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#LooseSoil" );
    
    public static final OntClass Macro_levelSelectionSystem = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Macro-levelSelectionSystem" );
    
    public static final OntClass Main = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Main" );
    
    public static final OntClass MainLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#MainLine" );
    
    public static final OntClass MaintainabilityAttributes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#MaintainabilityAttributes" );
    
    public static final OntClass Maintanability = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Maintanability" );
    
    public static final OntClass MeasurementResource = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#MeasurementResource" );
    
    /** <p>Material passing a 2.00-mm sieve (No. 10) and retained on a 0.475-mm (No. 
     *  40) sieve</p>
     */
    public static final OntClass MeduimSand = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#MeduimSand" );
    
    public static final OntClass MetalicPipeMaterial = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#MetalicPipeMaterial" );
    
    public static final OntClass MetallicPipe = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#MetallicPipe" );
    
    public static final OntClass Micro_levelSelectionSystem = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Micro-levelSelectionSystem" );
    
    /** <p>A method for installing pipes by jacking a pipe behind a remotely controlled, 
     *  steerable, guided, articulated boring machine.</p>
     */
    public static final OntClass Microtunelling = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Microtunelling" );
    
    /** <p>A graded-index or step-index optical fiber that supports the propagation of 
     *  more than one bound mode.</p>
     */
    public static final OntClass MultiModeFOC = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#MultiModeFOC" );
    
    public static final OntClass NaturalGas = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#NaturalGas" );
    
    public static final OntClass NonMetallic = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#NonMetallic" );
    
    public static final OntClass NonMetallicPipeMaterial = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#NonMetallicPipeMaterial" );
    
    public static final OntClass NumberofAgencies = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#NumberofAgencies" );
    
    public static final OntClass NumberofBuriedUtilitySystems = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#NumberofBuriedUtilitySystems" );
    
    public static final OntClass NumberofServiceConnectionsPer100m = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#NumberofServiceConnectionsPer100m" );
    
    public static final OntClass Nuts = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Nuts" );
    
    /** <p>Device used to provide an oder to gas for purposes of leak detection.</p> */
    public static final OntClass Odorizer = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Odorizer" );
    
    public static final OntClass Oil = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Oil" );
    
    public static final OntClass OpenCut = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#OpenCut" );
    
    public static final OntClass Pavement = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Pavement" );
    
    /** <p>Soil of vegetable matter</p> */
    public static final OntClass Peat = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Peat" );
    
    public static final OntClass PercentCommercialLU = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PercentCommercialLU" );
    
    public static final OntClass PercentROWOccupation = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PercentROWOccupation" );
    
    public static final OntClass PercentScheduleOverlap = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PercentScheduleOverlap" );
    
    public static final OntClass PercentageFines = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PercentageFines" );
    
    /** <p>Percentage of Residential Land Use</p> */
    public static final OntClass PercentageResidetialLU = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PercentageResidetialLU" );
    
    /** <p>A method that combines the accuracy of microtunneling and the steering mechanism 
     *  of a directional drill, and the spoil removal system of and auger boring machine.</p>
     */
    public static final OntClass Pilot_Tube_MicroTunelling = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Pilot_Tube_MicroTunelling" );
    
    public static final OntClass PipeMaterial = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PipeMaterial" );
    
    public static final OntClass PipePressureTest_CLASS = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PipePressureTest" );
    
    /** <p>Involves the installation of pre-fabricated pipe sections that are jacked 
     *  from a drive pit and simultaneously act as a tunnel support structure.</p>
     */
    public static final OntClass Pipe_Jacking = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Pipe_Jacking" );
    
    /** <p>A process where an air compressor hammers a steel casing pipe inside the earth 
     *  from a drive pit. The pipe may be hammered closed end (for small diameters) 
     *  or open end where the spoil is removed by means of air pressure.</p>
     */
    public static final OntClass Pipe_Ramming = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Pipe_Ramming" );
    
    public static final OntClass Piston = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Piston" );
    
    public static final OntClass PlainConcrete = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PlainConcrete" );
    
    /** <p>A column of wood, steel, fiberglass, or some other material supporting overhead 
     *  cables, usually by means of arms or brackets; used in CO-OSP installations.</p>
     */
    public static final OntClass Poles = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Poles" );
    
    public static final OntClass Polyethylene = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Polyethylene" );
    
    public static final OntClass Polypropylene = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Polypropylene" );
    
    /** <p>PVC</p> */
    public static final OntClass PolyvinylChloride = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PolyvinylChloride" );
    
    public static final OntClass PopulaionDensity = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PopulaionDensity" );
    
    public static final OntClass Posts = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Posts" );
    
    public static final OntClass PresetressedConcere = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PresetressedConcere" );
    
    public static final OntClass PressureMonitoringStation = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PressureMonitoringStation" );
    
    public static final OntClass PressureReducingValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PressureReducingValve" );
    
    public static final OntClass PressureUnits = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PressureUnits" );
    
    public static final OntClass ProcessMetrics = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ProcessMetrics" );
    
    public static final OntClass Propeller = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Propeller" );
    
    /** <p>A device used to protect facilities and equipment from abnormally high voltages 
     *  or currents.</p>
     */
    public static final OntClass Protector = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Protector" );
    
    /** <p>An attachment installed in maintenance holes to provide a point of connection 
     *  for blocks, sheaves, and other devices used for pulling cable into the duct 
     *  system.</p>
     */
    public static final OntClass PullingIron = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PullingIron" );
    
    public static final OntClass PumpUse = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#PumpUse" );
    
    public static final OntClass RawWater = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#RawWater" );
    
    public static final OntClass ReadyAccessEnclosure = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ReadyAccessEnclosure" );
    
    public static final OntClass ReinforcedConcrete = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ReinforcedConcrete" );
    
    public static final OntClass ReinforcementStrap = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ReinforcementStrap" );
    
    public static final OntClass ReliefValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ReliefValve" );
    
    public static final OntClass ResidentialImpactAttributes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ResidentialImpactAttributes" );
    
    public static final OntClass RestrictedAcessPedestal = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#RestrictedAcessPedestal" );
    
    public static final OntClass Roadway = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Roadway" );
    
    public static final OntClass Rock = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Rock" );
    
    /** <p>This system contains concpets related to the process of urban infrastructure 
     *  route selection</p>
     */
    public static final OntClass RouteSelectionSystem = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#RouteSelectionSystem" );
    
    public static final OntClass RubberLinedSteel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#RubberLinedSteel" );
    
    /** <p>Taps are used to provide service connections on gas pipes and mains. Rural 
     *  Tap represents supply from transmission pipe</p>
     */
    public static final OntClass RuralTap = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#RuralTap" );
    
    /** <p>Material passing a 4.75-mm sieve (No. 4) and retained on a 0.075-mm (No. 200) 
     *  sieve</p>
     */
    public static final OntClass Sand = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Sand" );
    
    /** <p>This device is used to remove or “scrub” foreign materials from natural gas. 
     *  (e.g. dust, dirt, etc.)</p>
     */
    public static final OntClass Scrubber = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Scrubber" );
    
    public static final OntClass Sealer = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Sealer" );
    
    public static final OntClass SeismicValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SeismicValve" );
    
    public static final OntClass Service = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Service" );
    
    public static final OntClass ServiceLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ServiceLine" );
    
    public static final OntClass SideWalk = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SideWalk" );
    
    /** <p>Material passing a 0.075-mm (No. 200) that is non-plastic, and has little 
     *  strength when dry (PI &lt; 4).</p>
     */
    public static final OntClass Silt = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Silt" );
    
    public static final OntClass Siphon = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Siphon" );
    
    public static final OntClass SoilPH = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SoilPH" );
    
    public static final OntClass SoilResistivity = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SoilResistivity" );
    
    public static final OntClass SoilType_CLASS = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SoilType" );
    
    public static final OntClass SoilType_TCM = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SoilType_TCM" );
    
    public static final OntClass SpatialConstraint = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SpatialConstraint" );
    
    /** <p>A metal or plastic housing with a semicylindrical cavity used in identical 
     *  pairs to clamp around a cable splice to provide a closure.</p>
     */
    public static final OntClass SpliceCase = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SpliceCase" );
    
    public static final OntClass SpliceClosure = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SpliceClosure" );
    
    public static final OntClass Sprinkler = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Sprinkler" );
    
    public static final OntClass StainlessSteel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StainlessSteel" );
    
    public static final OntClass Steam = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Steam" );
    
    public static final OntClass Steel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Steel" );
    
    public static final OntClass SteelPole = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SteelPole" );
    
    /** <p>Any location where storm sewer pipes directly discharge effluent.</p> */
    public static final OntClass StormwaterDischargePoint = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterDischargePoint" );
    
    /** <p>A fitting or device used for shutting or throttling flow through a storm sewer 
     *  line.</p>
     */
    public static final OntClass StormwaterDownSpout = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterDownSpout" );
    
    /** <p>A fitting is an item used to connect, cap, plug or otherwise alter a pipe 
     *  carrying storm sewage.</p>
     */
    public static final OntClass StormwaterFitting = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterFitting" );
    
    /** <p>The location where water is collected and received into the utility system.</p> */
    public static final OntClass StormwaterInlet = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterInlet" );
    
    /** <p>A box or small vault (usually concrete, brick, or cast iron) in storm sewer 
     *  systems located below grade with above grade access where pipes intersect. 
     *  The manhole also houses associated fittings, valves, meters, etc.</p>
     */
    public static final OntClass StormwaterJunctionBox = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterJunctionBox" );
    
    /** <p>A pipe used to carry storm sewer water from location to location (main line, 
     *  service line, vent line, etc).</p>
     */
    public static final OntClass StormwaterLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterLine" );
    
    /** <p>A box or small vault (usually concrete, brick, or cast iron) in storm sewer 
     *  systems located below grade with above grade access where pipes intersect. 
     *  The manhole also houses associated fittings, valves, meters, etc.</p>
     */
    public static final OntClass StormwaterManhole = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterManhole" );
    
    /** <p>A sign, concrete monument, etc. installed either directly above or immediately 
     *  adjacent to underground lines, bends, fittings, etc to indicate the presence 
     *  of nearby storm sewer.</p>
     */
    public static final OntClass StormwaterMarker = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterMarker" );
    
    /** <p>A device or structure placed in the storm sewer stream to separate water from 
     *  oil products.</p>
     */
    public static final OntClass StormwaterOilWaterSeperator = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterOilWaterSeperator" );
    
    public static final OntClass StormwaterPipe = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterPipe" );
    
    /** <p>A mechanical device for storm sewer system that draws material into itself 
     *  through an entrance port and forces the material out through an exhaust port.</p>
     */
    public static final OntClass StormwaterPump = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterPump" );
    
    /** <p>A fitting or device used for shutting or throttling flow through a storm sewer 
     *  line.</p>
     */
    public static final OntClass StormwaterValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StormwaterValve" );
    
    /** <p>This device is used to remove or “strain” foreign materials from natural gas 
     *  (e.g., dirt, dust, etc.)</p>
     */
    public static final OntClass Strainer = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Strainer" );
    
    public static final OntClass Strand = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Strand" );
    
    public static final OntClass Straps = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Straps" );
    
    public static final OntClass StrengthTest = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#StrengthTest" );
    
    public static final OntClass SurroundingAttributes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SurroundingAttributes" );
    
    public static final OntClass SuspensionStrand = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SuspensionStrand" );
    
    public static final OntClass SuspensionStrap = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#SuspensionStrap" );
    
    public static final OntClass TCMImpacts = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TCMImpacts" );
    
    public static final OntClass TCMPipeMaterial = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TCMPipeMaterial" );
    
    public static final OntClass TCMSelectionSystem = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TCMSelectionSystem" );
    
    public static final OntClass TCM_Attributes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TCM_Attributes" );
    
    public static final OntClass TeflonLinedSteel = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TeflonLinedSteel" );
    
    public static final OntClass TelecommunicationLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TelecommunicationLine" );
    
    public static final OntClass TelecommunicationManhole = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TelecommunicationManhole" );
    
    /** <p>A protective above-ground enclosure used most commonly to house a splice point 
     *  or administrative terminal location.</p>
     */
    public static final OntClass TelecommunicationPedestal = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TelecommunicationPedestal" );
    
    /** <p>An enclosed space for housing telecommunications equipment, cable terminations, 
     *  and cross-connects. The room is the recognized cross-connect between the backbone 
     *  cable and horizontal cabling.</p>
     */
    public static final OntClass TelecommunicationsRoom = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TelecommunicationsRoom" );
    
    public static final OntClass TerminatingCable = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TerminatingCable" );
    
    /** <p>A peice of concrete used at pipe bends to absorb water surges</p> */
    public static final OntClass ThrustBlock = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#ThrustBlock" );
    
    public static final OntClass TrafficImpact = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TrafficImpact" );
    
    public static final OntClass TrafficImpactAttributes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TrafficImpactAttributes" );
    
    /** <p>In pressurized systems, a device that permits reading the cable pressure in 
     *  a pressurized cable.</p>
     */
    public static final OntClass Transducer = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Transducer" );
    
    public static final OntClass Trenchless = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Trenchless" );
    
    public static final OntClass TrenchlessConstructionMethod = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#TrenchlessConstructionMethod" );
    
    public static final OntClass UnitsofMeasurement = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#UnitsofMeasurement" );
    
    public static final OntClass UtilityConflictAttributes = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#UtilityConflictAttributes" );
    
    /** <p>Involves the installation of pre-fabricated pipe sections that are jacked 
     *  from a drive pit and simultaneously act as a tunnel support structure. The 
     *  temporary support structure is constructed from the excavation face.</p>
     */
    public static final OntClass Utility_Tunelling = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Utility_Tunelling" );
    
    public static final OntClass VitrifiedClay = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#VitrifiedClay" );
    
    public static final OntClass Washers = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Washers" );
    
    public static final OntClass WasteWaterForceMain = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WasteWaterForceMain" );
    
    /** <p>A pipe used to carry waste water from location to location (main line, service 
     *  line, force main line, etc).</p>
     */
    public static final OntClass WasteWaterLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WasteWaterLine" );
    
    /** <p>A sign, concrete monument, etc. installed either directly above or immediately 
     *  adjacent to underground lines, bends, fittings, etc to indicate the presence 
     *  of waste water.</p>
     */
    public static final OntClass WasteWaterMarker = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WasteWaterMarker" );
    
    public static final OntClass WasteWaterPipe = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WasteWaterPipe" );
    
    public static final OntClass WasteWaterPipeMaterial = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WasteWaterPipeMaterial" );
    
    /** <p>A mechanical device for wastewater system that draws material into itself 
     *  through an entrance port and forces the material out through an exhaust port.</p>
     */
    public static final OntClass WasteWaterPump = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WasteWaterPump" );
    
    /** <p>A fitting or device used for shutting or throttling flow through a wastewater 
     *  line.</p>
     */
    public static final OntClass WasteWaterValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WasteWaterValve" );
    
    public static final OntClass Wastewater = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Wastewater" );
    
    /** <p>Any location where wastewater pipes directly discharge effluent.</p> */
    public static final OntClass WastewaterDischargePoint = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterDischargePoint" );
    
    /** <p>A pipe normally attached to the side of a building or structure which conveys 
     *  rainfall runoff from the roof area to the ground surface or an underground 
     *  collection system for wastewater.</p>
     */
    public static final OntClass WastewaterDownSpout = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterDownSpout" );
    
    /** <p>A fitting is an item used to connect, cap, plug or otherwise alter a pipe 
     *  carrying wastewater.</p>
     */
    public static final OntClass WastewaterFitting = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterFitting" );
    
    /** <p>A tank which separates grease from water, collects the grease for removal, 
     *  and allows the water to exit.</p>
     */
    public static final OntClass WastewaterGreaseTrap = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterGreaseTrap" );
    
    /** <p>The location where waste water is collected and received into the utility 
     *  system.</p>
     */
    public static final OntClass WastewaterInlet = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterInlet" );
    
    /** <p>A box or small vault (usually concrete, brick, or cast iron) in wastewater 
     *  systems located below grade with above grade access where pipes intersect. 
     *  The manhole also houses associated fittings, valves, meters, etc.</p>
     */
    public static final OntClass WastewaterJunctionBox = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterJunctionBox" );
    
    public static final OntClass WastewaterLineUse = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterLineUse" );
    
    public static final OntClass WastewaterMainLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterMainLine" );
    
    /** <p>A box or small vault (usually concrete, brick, or cast iron) in wastewater 
     *  systems located below grade with above grade access where pipes intersect. 
     *  The manhole also houses associated fittings, valves, meters, etc.</p>
     */
    public static final OntClass WastewaterManhole = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterManhole" );
    
    /** <p>A device installed in a line for measuring the quantity and or rate of water 
     *  through a section of line.</p>
     */
    public static final OntClass WastewaterMeter = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterMeter" );
    
    /** <p>A device or structure placed in the waste water stream to separate water from 
     *  oil products.</p>
     */
    public static final OntClass WastewaterOilWaterSeperator = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterOilWaterSeperator" );
    
    public static final OntClass WastewaterServiceLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterServiceLine" );
    
    public static final OntClass WastewaterTrunkLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WastewaterTrunkLine" );
    
    public static final OntClass Wastewater_ForceMain = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Wastewater_ForceMain" );
    
    public static final OntClass Wastewater_MainLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Wastewater_MainLine" );
    
    public static final OntClass Wastewater_OverflowLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Wastewater_OverflowLine" );
    
    public static final OntClass Wastewater_ServiceLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Wastewater_ServiceLine" );
    
    public static final OntClass Wastewater_SludgeLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Wastewater_SludgeLine" );
    
    public static final OntClass Water = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#Water" );
    
    /** <p>A closed pipe chamber installed on the discharge line of a reciprocating pump 
     *  to take up irregularities in hydraulic conditions and relieve the pump of 
     *  shocks caused by the pulsating flow</p>
     */
    public static final OntClass WaterAirChamber = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterAirChamber" );
    
    public static final OntClass WaterBlowOffHydrant = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterBlowOffHydrant" );
    
    public static final OntClass WaterChlorineSensor = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterChlorineSensor" );
    
    public static final OntClass WaterConnectingFitting = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterConnectingFitting" );
    
    /** <p>(1) A device to connect the ends of two pipes. (2) A compression fitting to 
     *  attach the ends of service pipe or tubing. (3) A steel or cast-iron sleeve 
     *  with a gasket and retainer glands on each end bolted together across the sleeve 
     *  to apply compression against the ends of two connecting water mains.</p>
     */
    public static final OntClass WaterCoupling = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterCoupling" );
    
    /** <p>A system of conduits (laterals, distributaries, pipes, and their appurtenances) 
     *  by which a primary water supply is distributed to consumers. The term applies 
     *  particularly to the network of pipelines in the streets in a domestic water 
     *  system.</p>
     */
    public static final OntClass WaterDisributionSystem = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterDisributionSystem" );
    
    /** <p>A centrifugal pump with suction pipes connected to the casing from both sides</p> */
    public static final OntClass WaterDoubleSuctionPump = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterDoubleSuctionPump" );
    
    /** <p>A pipe fitting that connects two pipes at an angle. The angle is always 90° 
     *  unless another angle is stated. An elbow is also called an ell.</p>
     */
    public static final OntClass WaterElbow = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterElbow" );
    
    /** <p>The built-up material on the inside of a potable water pipe or appurtenance 
     *  caused by the precipitation of a mineral, such as calcium carbonate (CaCO3); 
     *  or by corrosion of an exposed metal, resulting in the formation of tubercles. 
     *  Encrustations may result in a rough or smooth surface and normally restrict 
     *  flow by reducing diameter or increasing roughness. See also tubercle</p>
     */
    public static final OntClass WaterEncrustation = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterEncrustation" );
    
    /** <p>A pipe coupling that permits relative movement of the two joined pipes</p> */
    public static final OntClass WaterExpansionCoupling = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterExpansionCoupling" );
    
    /** <p>A fitting is an item used to connect, cap, plug or otherwise alter a pipe 
     *  carrying water.</p>
     */
    public static final OntClass WaterFitting = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterFitting" );
    
    public static final OntClass WaterFlowSensor = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterFlowSensor" );
    
    public static final OntClass WaterHydrant = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterHydrant" );
    
    /** <p>The location where water is allowed into the water distribution system.</p> */
    public static final OntClass WaterIntake = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterIntake" );
    
    /** <p>A box or small vault (usually concrete, brick, or cast iron) in water systems 
     *  located below grade with above grade access where pipes intersect. The manhole 
     *  also houses associated fittings, valves, meters, etc.</p>
     */
    public static final OntClass WaterJunctionBox = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterJunctionBox" );
    
    /** <p>A pipe used to carry water from location to location (main line, service line, 
     *  vent line, etc).</p>
     */
    public static final OntClass WaterLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterLine" );
    
    public static final OntClass WaterLineUse = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterLineUse" );
    
    public static final OntClass WaterMainLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterMainLine" );
    
    /** <p>A sign, concrete monument, etc. installed either directly above or immediately 
     *  adjacent to underground lines, bends, fittings, etc to indicate the presence 
     *  of water.</p>
     */
    public static final OntClass WaterMarker = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterMarker" );
    
    /** <p>A device installed in a line for measuring the quantity and or rate of water 
     *  flowing to a facility or through a section of line.</p>
     */
    public static final OntClass WaterMeter = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterMeter" );
    
    public static final OntClass WaterMeterType = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterMeterType" );
    
    public static final OntClass WaterPipe = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterPipe" );
    
    public static final OntClass WaterPipeMaterial = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterPipeMaterial" );
    
    public static final OntClass WaterPlug = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterPlug" );
    
    public static final OntClass WaterPressureSensor = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterPressureSensor" );
    
    /** <p>A mechanical device for water system that draws material into itself through 
     *  an entrance port and forces the material out through an exhaust port.</p>
     */
    public static final OntClass WaterPump = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterPump" );
    
    public static final OntClass WaterPumpChamber = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterPumpChamber" );
    
    public static final OntClass WaterReducingFitting = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterReducingFitting" );
    
    /** <p>A pressure regulator located in the water line that automatically reduces 
     *  the pressure on the downstream side of the valve to a preset magnitude.</p>
     */
    public static final OntClass WaterRegulatorReducer = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterRegulatorReducer" );
    
    public static final OntClass WaterSensor = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterSensor" );
    
    public static final OntClass WaterServiceLine = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterServiceLine" );
    
    public static final OntClass WaterTreatmentPlant = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterTreatmentPlant" );
    
    public static final OntClass WaterTurbiditySensor = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterTurbiditySensor" );
    
    /** <p>A fitting or device used for shutting or throttling flow through a water line.</p> */
    public static final OntClass WaterValve = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterValve" );
    
    public static final OntClass WaterValveChamber = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterValveChamber" );
    
    public static final OntClass WaterValveType = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterValveType" );
    
    public static final OntClass WaterValveUse = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterValveUse" );
    
    public static final OntClass WaterVelocitySensor = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterVelocitySensor" );
    
    public static final OntClass WaterVent = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterVent" );
    
    /** <p>(1) A pipe branching off a straight main run at an angle of 45°. (2) A polyphase 
     *  electric circuit for which the phase difference is 120° and that, when drawn, 
     *  resembles the letter Y.</p>
     */
    public static final OntClass WaterWye = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WaterWye" );
    
    public static final OntClass WoodPole = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WoodPole" );
    
    public static final OntClass WorkzoneWidth = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WorkzoneWidth" );
    
    public static final OntClass WroughIron = m_model.createClass( "http://www.owl-ontologies.com/unnamed.owl#WroughIron" );
    
    public static final OntClass Additive = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Additive" );
    
    /** <p>Look for external http://www.w3.org/2005/Incubator/ssn/wiki/Agriculture_Meteorology_Sensor_Network#CF_.28Climate_and_Forecast.29_ontologies</p> */
    public static final OntClass Climate = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Climate" );
    
    public static final OntClass Contaminant = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Contaminant" );
    
    public static final OntClass Crop = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Crop" );
    
    public static final OntClass Farmer = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Farmer" );
    
    public static final OntClass Farmland = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Farmland" );
    
    public static final OntClass GroundWater = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#GroundWater" );
    
    public static final OntClass IrrigationSystem = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#IrrigationSystem" );
    
    public static final OntClass Lake = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Lake" );
    
    /** <p>Look for external</p> */
    public static final OntClass Location = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Location" );
    
    public static final OntClass Patch = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Patch" );
    
    public static final OntClass Pesticide = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Pesticide" );
    
    public static final OntClass PlantFood = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#PlantFood" );
    
    public static final OntClass PublicWater = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#PublicWater" );
    
    public static final OntClass Reservoirs = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Reservoirs" );
    
    public static final OntClass River = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#River" );
    
    /** <p>Sensor located within the soil to measure different properties about the farm 
     *  land</p>
     */
    public static final OntClass Sensor = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Sensor" );
    
    public static final OntClass Soil = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#Soil" );
    
    public static final OntClass WaterEmitter = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#WaterEmitter" );
    
    public static final OntClass WaterFilter = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#WaterFilter" );
    
    public static final OntClass WaterSource = m_model.createClass( "http://www.semanticweb.org/ece8486class/ontologies/2014/6/irrigation#WaterSource" );
    
    public static final OntClass Acquaintance = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Acquaintance" );
    
    /** <p>To specify the components of the delivery address for the object</p> */
    public static final OntClass Address = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Address" );
    
    public static final OntClass Agent = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Agent" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass BBS = m_model.createClass( "http://www.w3.org/2006/vcard/ns#BBS" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass Car = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Car" );
    
    /** <p>Also called mobile telephone</p> */
    public static final OntClass Cell = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Cell" );
    
    public static final OntClass Child = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Child" );
    
    public static final OntClass Colleague = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Colleague" );
    
    public static final OntClass Contact = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Contact" );
    
    public static final OntClass Coresident = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Coresident" );
    
    public static final OntClass Coworker = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Coworker" );
    
    public static final OntClass Crush = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Crush" );
    
    public static final OntClass Date = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Date" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass Dom = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Dom" );
    
    /** <p>To specify the electronic mail address for communication with the object the 
     *  vCard represents. Use the hasEmail object property.</p>
     */
    public static final OntClass Email = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Email" );
    
    public static final OntClass Emergency = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Emergency" );
    
    public static final OntClass Fax = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Fax" );
    
    public static final OntClass Female = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Female" );
    
    public static final OntClass Friend = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Friend" );
    
    /** <p>Used for gender codes. The URI of the gender code must be used as the value 
     *  for Gender.</p>
     */
    public static final OntClass Gender = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Gender" );
    
    /** <p>Object representing a group of persons or entities. A group object will usually 
     *  contain hasMember properties to specify the members of the group.</p>
     */
    public static final OntClass Group = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Group" );
    
    /** <p>This implies that the property is related to an individual's personal life</p> */
    public static final OntClass Home = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Home" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass ISDN = m_model.createClass( "http://www.w3.org/2006/vcard/ns#ISDN" );
    
    /** <p>An object representing a single person or entity</p> */
    public static final OntClass Individual = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Individual" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass Internet = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Internet" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass Intl = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Intl" );
    
    public static final OntClass Kin = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Kin" );
    
    /** <p>The parent class for all objects</p> */
    public static final OntClass Kind = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Kind" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass Label = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Label" );
    
    /** <p>An object representing a named geographical place</p> */
    public static final OntClass Location_CLASS = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Location" );
    
    public static final OntClass Male = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Male" );
    
    public static final OntClass Me = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Me" );
    
    public static final OntClass Met = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Met" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass Modem = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Modem" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass Msg = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Msg" );
    
    public static final OntClass Muse = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Muse" );
    
    /** <p>To specify the components of the name of the object</p> */
    public static final OntClass Name = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Name" );
    
    public static final OntClass Neighbor = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Neighbor" );
    
    public static final OntClass None_CLASS = m_model.createClass( "http://www.w3.org/2006/vcard/ns#None" );
    
    /** <p>An object representing an organization. An organization is a single entity, 
     *  and might represent a business or government, a department or division within 
     *  a business or government, a club, an association, or the like.</p>
     */
    public static final OntClass Organization = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Organization" );
    
    public static final OntClass Other = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Other" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass PCS = m_model.createClass( "http://www.w3.org/2006/vcard/ns#PCS" );
    
    public static final OntClass Pager = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Pager" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass Parcel = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Parcel" );
    
    public static final OntClass Parent = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Parent" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass Postal = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Postal" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass Pref = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Pref" );
    
    /** <p>Used for relation type codes. The URI of the relation type code must be used 
     *  as the value for the Relation Type.</p>
     */
    public static final OntClass RelatedType = m_model.createClass( "http://www.w3.org/2006/vcard/ns#RelatedType" );
    
    public static final OntClass Sibling = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Sibling" );
    
    public static final OntClass Spouse = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Spouse" );
    
    public static final OntClass Sweetheart = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Sweetheart" );
    
    /** <p>This class is deprecated. Use the hasTelephone object property.</p> */
    public static final OntClass Tel = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Tel" );
    
    /** <p>Used for telephone type codes. The URI of the telephone type code must be 
     *  used as the value for the Telephone Type.</p>
     */
    public static final OntClass TelephoneType = m_model.createClass( "http://www.w3.org/2006/vcard/ns#TelephoneType" );
    
    /** <p>Also called sms telephone</p> */
    public static final OntClass Text = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Text" );
    
    public static final OntClass TextPhone = m_model.createClass( "http://www.w3.org/2006/vcard/ns#TextPhone" );
    
    /** <p>Used for type codes. The URI of the type code must be used as the value for 
     *  Type.</p>
     */
    public static final OntClass Type = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Type" );
    
    public static final OntClass Unknown = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Unknown" );
    
    /** <p>The vCard class is equivalent to the new Kind class, which is the parent for 
     *  the four explicit types of vCards (Individual, Organization, Location, Group)</p>
     */
    public static final OntClass VCard = m_model.createClass( "http://www.w3.org/2006/vcard/ns#VCard" );
    
    public static final OntClass Video = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Video" );
    
    public static final OntClass Voice = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Voice" );
    
    /** <p>This implies that the property is related to an individual's work place</p> */
    public static final OntClass Work = m_model.createClass( "http://www.w3.org/2006/vcard/ns#Work" );
    
    /** <p>This class is deprecated</p> */
    public static final OntClass X400 = m_model.createClass( "http://www.w3.org/2006/vcard/ns#X400" );
    
}
